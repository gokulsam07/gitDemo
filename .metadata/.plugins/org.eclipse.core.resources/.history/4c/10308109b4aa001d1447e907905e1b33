package packages.restassured.training;
import org.json.JSONObject;
import org.testng.annotations.Test;
import io.restassured.RestAssured;
import io.restassured.response.ResponseBodyExtractionOptions;

import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;

import java.util.HashMap;
public class PostRequestBodyMethods {
int id;
	//HashMap
	
	//@Test(priority=1)
	void HashMapMethod() {
		
		//Initializing and set values to HashMap
		HashMap hm = new HashMap();
		hm.put("name","Scott");
		hm.put("location","India");
		hm.put("phone","123456");
		hm.put("courses",new String[] {"C","C++"});
		
		given()
			.contentType("application/json")
			.body(hm)
		.when()
			.post("https://reqres.in/api/users")
		.then()
			.statusCode(201)
			.body("name", equalTo("Scott"))
			.body("location", equalTo("India"))
			.body("phone", equalTo("123456"))
			.body("courses", contains("C","C++"))
			.header("Content-Type", "application/json; charset=utf-8")
			.log().all();		
	}
	
	
	//post using org.json -- check in pom.xml that org.json dependency is available
	
	@Test(priority=1)
	void orgJsonLibrary() {
		
		//Initializing and set values to JSON Object
		JSONObject jo = new JSONObject();
		jo.put("name","Scott");
		jo.put("location","India");
		jo.put("phone","123456");
		jo.put("courses",new String[] {"C","C++"});
		
		id= ((ResponseBodyExtractionOptions) given()
			.contentType("application/json")
			.body(jo.toString()) 
		.when()
			.post("https://reqres.in/api/users")
		.then()
			.statusCode(201)
			.body("name", equalTo("Scott"))
			.body("location", equalTo("India"))
			.body("phone", equalTo("123456"))
			.body("courses", contains("C","C++"))
			.header("Content-Type", "application/json; charset=utf-8")
			.log().all())
			.jsonPath().getInt("id");		
	}
	
	//@Test(priority=1)
	void ExternalFile() {
		
			
	}

	
	
	@Test(priority=2, dependsOnMethods = {"orgJsonLibrary"})
	void deleteUser() {
		
		given().when().delete("https://reqres.in/api/users/"+id).then().statusCode(204);
	}
	
}
